;========================================================================================
;
; filetest.x version 1.02  by みゆ (miyu rose)
;
;========================================================================================

    .cpu    68000

    .include    doscall.mac
    .include    iocscall.mac

;=========================================================================================

    .text
    .even

;=========================================================================================
; プログラム開始
;-----------------------------------------------------------------------------------------

main:                                           ; 本プログラムの開始アドレス
    lea.l   mysp,sp                             ; スタック領域を自前で確保

;-----------------------------------------------------------------------------------------
; タイトル表示
;-----------------------------------------------------------------------------------------

    bsr     mlib_printtitle                     ; タイトルを表示するよ

    move.w  #$0003,d0                           ; $3(白色) で
    lea.l   mlib_crlf,a0                        ;  改行を
    bsr     mlib_cprint                         ;   表示するよ

;-----------------------------------------------------------------------------------------
; 01: 新規ファイルを_CREATE → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_01)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #%0010_0000,-(sp)                   ; アーカイブ属性(%XLAD_VSHR) と
    pea.l   (filename1S)                        ;  ファイル名のポインタ を指定して
    DOS     _CREATE                             ;   ファイルを作るよ
    addq.l  #6,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー) なら '失敗' を表示して おしまい へ

    move.l  d0,d7                               ; d7 へ d0(ファイルハンドル) を格納

    move.w  #%0010_0000,-(sp)                   ; アーカイブ属性(%XLAD_VSHR) と
    pea.l   (filename2L)                        ;  ファイル名のポインタ を指定して
    DOS     _CREATE                             ;   ファイルを作るよ
    addq.l  #6,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー) なら '失敗' を表示して おしまい へ

    move.l  d0,d6                               ; d6 へ d0(ファイルハンドル) を格納

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 02: 'a'～'z'の26バイトを_WRITE → 26が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_02)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #26,-(sp)                           ; 書き込むサイズ 26 bytes と
    pea.l   (file_abc)                          ;  書き込む内容のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _WRITE                              ;    ファイルに書き込むよ
    lea     10(sp),sp                           ; SP を戻します

    cmpi.l  #26,d0                              ; d0(返り値) を 26 と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 03: _CLOSE → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_03)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  d7,-(sp)                            ; ファイルハンドルを指定して
    DOS     _CLOSE                              ;  ファイルを閉じるよ
    addq.l  #2,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    move.w  d6,-(sp)                            ; ファイルハンドルを指定して
    DOS     _CLOSE                              ;  ファイルを閉じるよ
    addq.l  #2,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 04: そのファイルを読み込み/書き込みモードで_OPEN → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_04)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #%0000_0010,-(sp)                   ; 読み書きモード と
    pea.l   (filename1S)                        ;  ファイル名 を指定して
    DOS     _OPEN                               ;   ファイルを開くよ
    addq.l  #6,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    move.l  d0,d7                               ; d7 へ d0(ファイルハンドル) を格納
    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 05: ファイルの末尾に_SEEK → 26が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_05)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #2,-(sp)                            ; ファイルの末尾から と
    clr.l   -(sp)                               ;  オフセット 0 byte と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #26,d0                              ; d0(返り値) を 26 と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 06: '0'～'9'の10バイトを_WRITE → 10が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_06)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #10,-(sp)                           ; 書き込むサイズ 10 bytes と
    pea.l   (file_012)                          ;  ファイル名のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _WRITE                              ;    ファイルに書き込むよ
    lea     10(sp),sp                           ; SP を戻します

    cmpi.l  #10,d0                              ; d0(返り値) を d0 と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 07: _CLOSE → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_07)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  d7,-(sp)                            ; ファイルハンドルを指定して
    DOS     _CLOSE                              ;  ファイルを閉じるよ
    addq.l  #2,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 08a: 小文字ファイル名を大文字ファイル名に変えて読み込み/書き込みモードで_OPEN → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_08a)                           ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #%0000_0010,-(sp)                   ; 読み書きモード と
    pea.l   (filename1L)                        ;  ファイル名 を指定して
    DOS     _OPEN                               ;   ファイルを開くよ
    addq.l  #6,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    move.l  d0,d7                               ; d7 へ d0(ファイルハンドル) を格納

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 08b: 大文字ファイル名を小文字ファイル名に変えて読み込み/書き込みモードで_OPEN → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_08b)                           ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #%0000_0010,-(sp)                   ; 読み書きモード と
    pea.l   (filename2S)                        ;  ファイル名 を指定して
    DOS     _OPEN                               ;   ファイルを開くよ
    addq.l  #6,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    move.l  d0,d6                               ; d6 へ d0(ファイルハンドル) を格納

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 09: 100バイト_READ → 36が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_09)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #100,-(sp)                          ; 読み込むサイズ 100 bytes と
    pea.l   (filebuf1)                          ;  読み込む先のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _READ                               ;    ファイルを読み込むよ
    lea.l   10(sp),sp                           ; SP を戻します

    cmpi.l  #36,d0                              ; d0(返り値) と 36 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 10: 読み込んだバッファの36バイトがabcdefghijklmnopqrstuvwxyz0123456789である
;-----------------------------------------------------------------------------------------

    pea.l   (mes_10)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します
    
    lea.l   filebuf1,a0                         ; a0 に ファイルを読み込んだ先のポインタ を取得

    cmp.l   #'abcd',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'abcd' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'efgh',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'efgh' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'ijkl',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'ijkl' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'mnop',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'mnop' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'qrst',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'qrst' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'uvwx',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'uvwx' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'yz01',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'yz01' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'2345',(a0)+                       ; a0 ポインタの内容をポストインクリメントで '2345' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'6789',(a0)                        ; a0 ポインタの内容を '6789' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 11: ファイルの先頭に_SEEK → 0が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_11)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    clr.w   -(sp)                               ; ファイルの先頭から と
    clr.l   -(sp)                               ;  オフセット 0 byte と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bne     failure                             ;  0 でなければ '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 12: 先頭から20バイトの位置に_SEEK → 20が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_12)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    clr.w   -(sp)                               ; ファイル先頭から と
    move.l  #20,-(sp)                           ;  オフセット 20 bytes と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #20,d0                              ; d0(返り値) と 20 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 13: 'A'～'E'の5バイトを_WRITE → 5が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_13)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #5,-(sp)                            ; 書き込むサイズ 5 bytes と
    pea.l   (file_ABC)                          ;  ファイル名のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _WRITE                              ;    ファイルに書き込むよ
    lea     10(sp),sp                           ; SP を戻します

    cmpi.l  #5,d0                               ; d0(返り値) と 5 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 14: _CLOSE → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_14)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  d7,-(sp)                            ; ファイルハンドルを指定して
    DOS     _CLOSE                              ;  ファイルを閉じるよ
    addq.l  #2,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    move.w  d6,-(sp)                            ; ファイルハンドルを指定して
    DOS     _CLOSE                              ;  ファイルを閉じるよ
    addq.l  #2,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 15: そのファイルを読み込み/書き込みモードで_OPEN → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_15)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #%0000_0010,-(sp)                   ; 読み書きモード と
    pea.l   (filename1S)                        ;  ファイル名 を指定して
    DOS     _OPEN                               ;   ファイルを開くよ
    addq.l  #6,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    move.l  d0,d7                               ; d7 へ d0(ファイルハンドル) を格納
    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 16: 100バイト_READ → 36が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_16)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #100,-(sp)                          ; 読み込むサイズ 100 bytes と
    pea.l   (filebuf2)                          ;  読み込む先のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _READ                               ;    ファイルを読み込むよ
    lea.l   10(sp),sp                           ; SP を戻します

    cmpi.l  #36,d0                              ; d0(返り値) と
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 17: 読み込んだバッファの36バイトがabcdefghijklmnopqrstABCDEz0123456789である
;-----------------------------------------------------------------------------------------

    pea.l   (mes_17)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します
    
    lea.l   filebuf2,a0                         ; a0 に ファイルを読み込んだ先のポインタ を取得

    cmp.l   #'abcd',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'abcd' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'efgh',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'efgh' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'ijkl',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'ijkl' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'mnop',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'mnop' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'qrst',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'qrst' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'ABCD',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'ABCD' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'Ez01',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'Ez01' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'2345',(a0)+                       ; a0 ポインタの内容をポストインクリメントで '2345' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'6789',(a0)                        ; a0 ポインタの内容を '6789' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 18: 末尾から-6バイトの位置に_SEEK →30が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_18)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #2,-(sp)                            ; ファイル末尾から と
    move.l  #-6,-(sp)                           ;  オフセット -6 bytes と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #30,d0                              ; d0(返り値) と 30 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 19: 100バイト_READ → 6が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_19)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #100,-(sp)                          ; 読み込むサイズ 100 bytes と
    pea.l   (filebuf3)                          ;  読み込む先のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _READ                               ;    ファイルを読み込むよ
    lea.l   10(sp),sp                           ; SP を戻します

    cmpi.l  #6,d0                               ; d0(返り値) と d0 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 20: 読み込んだバッファの6バイトが456789である
;-----------------------------------------------------------------------------------------

    pea.l   (mes_20)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します
    
    lea.l   filebuf3,a0                         ; a0 に ファイルを読み込んだ先のポインタ を取得

    cmp.l   #'4567',(a0)+                       ; a0 ポインタの内容をポストインクリメントで '' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.w   #'89',(a0)+                         ; a0 ポインタの内容をポストインクリメントで '' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 21: 先頭から12バイトの位置に_SEEK → 12が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_21)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    clr.w   -(sp)                               ; ファイル先頭から と
    move.l  #12,-(sp)                           ;  オフセット 12 bytes と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #12,d0
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 22: 現在の位置から-5バイトの位置に_SEEK → 7が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_22)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #1,-(sp)                            ; ファイル現在地から
    move.l  #-5,-(sp)                           ;  オフセット -5 bytes と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #7,d0                               ; d0(返り値) と 7 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 23: 100バイト_READ → 29が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_23)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #100,-(sp)                          ; 読み込むサイズ 100 bytes と
    pea.l   (filebuf4)                          ;  読み込む先のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _READ                               ;    ファイルを読み込むよ
    lea.l   10(sp),sp                           ; SP を戻します

    cmpi.l  #29,d0                              ; d0(返り値) と 29 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 24: 読み込んだバッファの29バイトがhijklmnopqrstABCDEz0123456789である
;-----------------------------------------------------------------------------------------

    pea.l   (mes_24)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します
    
    lea.l   filebuf4,a0                         ; a0 に ファイルを読み込んだ先のポインタ を取得

    cmp.l   #'hijk',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'hijk' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'lmno',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'lmno' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'pqrs',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'pqrs' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'tABC',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'tABC' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'DEz0',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'DEz0' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'1234',(a0)+                       ; a0 ポインタの内容をポストインクリメントで '1234' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'5678',(a0)+                       ; a0 ポインタの内容をポストインクリメントで '5678' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.b   #'9',(a0)                           ; a0 ポインタの内容を '9' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 25: 先頭から27バイトの位置に_SEEK → 27が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_25)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    clr.w   -(sp)                               ; ファイル先頭から と
    move.l  #27,-(sp)                           ;  オフセット 27 bytes と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #27,d0                              ; d0(返り値) と 27 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 26: 現在の位置から-4バイトの位置に_SEEK → 23が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_26)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #1,-(sp)                            ; ファイル現在地から と
    move.l  #-4,-(sp)                           ;  オフセット -4 bytes と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #23,d0                              ; d0(返り値) と 23 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 27: 0バイト_WRITE → 0が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_27)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    clr.l   -(sp)                               ; 書き込むサイズ 0 byte と
    pea.l   (file_abc)                          ;  書き込むファイル名のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _WRITE                              ;    ファイルに書き込むよ
    lea     10(sp),sp                           ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェック
    bne     failure                             ;  0 でなければ '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 28: _CLOSE → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_28)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  d7,-(sp)                            ; ファイルハンドルを指定して
    DOS     _CLOSE                              ;  ファイルを閉じるよ
    addq.l  #2,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 29: そのファイルを読み込み/書き込みモードで_OPEN → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_29)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #%0000_0010,-(sp)                   ; 読み書きモード と
    pea.l   (filename1S)                        ;  ファイル名 を指定して
    DOS     _OPEN                               ;   ファイルを開くよ
    addq.l  #6,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    move.l  d0,d7                               ; d7 へ d0(ファイルハンドル) を格納
    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 30: ファイルの末尾に_SEEK → 23が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_30)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #2,-(sp)                            ; ファイルの末尾から と
    clr.l   -(sp)                               ;  オフセット 0 byte と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    cmpi.l  #23,d0                              ; d0(返り値) と 23 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 31: ファイルの先頭に_SEEK → 0が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_31)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    clr.w   -(sp)                               ; ファイル先頭から と
    clr.l   -(sp)                               ;  オフセット 0 byte と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _SEEK                               ;    ファイルポインタをシークするよ
    addq.l  #8,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェック
    bne     failure                             ;  0 でなければ '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 32: 100バイト_READ → 23が返る
;-----------------------------------------------------------------------------------------

    pea.l   (mes_32)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.l  #100,-(sp)                          ; 読み込むサイズ 100 bytes と
    pea.l   (filebuf5)                          ;  読み込む先のポインタ と
    move.w  d7,-(sp)                            ;   ファイルハンドル を指定して
    DOS     _READ                               ;    ファイルを読み込むよ
    lea.l   10(sp),sp                           ; SP を戻します

    cmpi.l  #23,d0                              ; d0(返り値) と 23 を比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 33: 読み込んだバッファの23バイトがabcdefghijklmnopqrstABCである
;-----------------------------------------------------------------------------------------

    pea.l   (mes_33)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します
    
    lea.l   filebuf5,a0                         ; a0 に ファイルを読み込んだ先のポインタ を取得

    cmp.l   #'abcd',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'abcd' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'efgh',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'efgh' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'ijkl',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'ijkl' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'mnop',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'mnop' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.l   #'qrst',(a0)+                       ; a0 ポインタの内容をポストインクリメントで 'qrst' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.w   #'AB',(a0)+                         ; a0 ポインタの内容をポストインクリメントで 'AB' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ
    cmp.b   #'C',(a0)                           ; a0 ポインタの内容を 'C' と比較して
    bne     failure                             ;  違っていたら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; 34: _CLOSE → エラーにならない
;-----------------------------------------------------------------------------------------

    pea.l   (mes_34)                            ; チェック項目 を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  d7,-(sp)                            ; ファイルハンドルを指定して
    DOS     _CLOSE                              ;  ファイルを閉じるよ
    addq.l  #2,sp                               ; SP を戻します

    tst.l   d0                                  ; d0(返り値) をチェックして
    bmi     failure                             ;  負の数(エラー)なら '失敗' を表示して おしまい へ

    bsr     success                             ; '成功' を表示するよ

;-----------------------------------------------------------------------------------------
; XX: EXIT
;-----------------------------------------------------------------------------------------

    bra     EXIT                                ; おしまい へ

;-----------------------------------------------------------------------------------------
; 失敗した失敗した失敗した
;-----------------------------------------------------------------------------------------

failure:
    pea.l   (mes_dots)                          ; ' … ' を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #$0006,d0                           ; $6 = $2(黄色) + $4(太字) で
    lea.l   mes_failure,a0                      ;  '失敗' を
    bsr     mlib_cprint                         ;   表示するよ

    move.w  #$0003,d0                           ; $3(白色) で
    lea.l   mlib_crlf2,a0                       ;  改行を
    bsr     mlib_cprint                         ;   表示するよ

;-----------------------------------------------------------------------------------------
; おしまい
;-----------------------------------------------------------------------------------------

EXIT:
    DOS     _EXIT                               ; おしまい

;=========================================================================================


;-----------------------------------------------------------------------------------------
; 成功！
;-----------------------------------------------------------------------------------------

success:
    pea.l   (mes_dots)                          ; ' … ' を
    DOS     _PRINT                              ;  表示するよ
    addq.l  #4,sp                               ; SP を戻します

    move.w  #$0005,d0                           ; $4 = $1(水色) + $4(太字) で
    lea.l   mes_success,a0                      ;  '成功' を
    bsr     mlib_cprint                         ;   表示するよ

    move.w  #$0003,d0                           ; $3(白色) で
    lea.l   mlib_crlf,a0                        ;  改行を
    bsr     mlib_cprint                         ;   表示するよ

    rts

;========================================================================================
;
    mlib_printtitle::                           ; タイトル表記
;
;   arg        mlib_title                       ; タイトル文字列（のアドレス）
;              mlib_version                     ; バージョン文字列（のアドレス）
;              mlib_by                          ; by文字列（のアドレス）
;              mlib_author                      ; 作者文字列（のアドレス）
;
;----------------------------------------------------------------------------------------

    movem.l    d0/a0,-(sp)                      ; d0, a0 を退避

    move.w     #$0006,d0                        ; $6 = $2(黄色) + $4(太字)
    lea.l      mlib_title,a0                    ; タイトルを
    bsr        mlib_cprint                      ;  表示するよ

    move.w     #$0007,d0                        ; $7 = $3(白)   + $4(太字)
    lea.l      mlib_version,a0                  ; バージョンを
    bsr        mlib_cprint                      ;  表示するよ

    move.w     #$0003,d0                        ; $3(白)
    lea.l      mlib_by,a0                       ; 'by' を
    bsr        mlib_cprint                      ;  表示するよ

    move.w     #$0007,d0                        ; $7 = $3(白)   + $4(太字)
    lea.l      mlib_author,a0                   ; 作者名を
    bsr        mlib_cprint                      ;  表示するよ

    move.w     #$0003,d0                        ; $3(白)
    lea.l      mlib_crlf,a0                     ; 改行を
    bsr        mlib_cprint                      ;  表示するよ

    movem.l    (sp)+,d0/a0                      ; d0, a0 を復元
    rts

;========================================================================================
;
    mlib_cprint::                               ; 文字属性指定付き _PRINT
;
;   arg        d0.w                             ; 文字属性
;              a0.l                             ; 文字列のポインタ
;
;----------------------------------------------------------------------------------------

    move.w     d0,-(sp)                         ; 文字属性
    move.w     #$0002,-(sp)                     ; 文字属性の設定ﾓｰﾄﾞ
    DOS        _CONCTRL                         ;  に設定するよ
    addq.l     #4,sp                            ; SP を戻します

    pea.l      (a0)                             ; 文字列を
    DOS        _PRINT                           ;  表示するよ
    addq.l     #4,sp                            ; SP を戻します

    rts

;=========================================================================================


;=========================================================================================

    .data
    .even

;-----------------------------------------------------------------------------------------

mlib_title::
    .dc.b   'filetest.x ',$00
mlib_version::
    .dc.b   $F3,'v',$F3,'e',$F3,'r',$F3,'s',$F3,'i',$F3,'o',$F3,'n',$F3,' '
    .dc.b   $F3,'1',$F3,'.',$F3,'0',$F3,'2',$F3,' ',$00
mlib_by::
    .dc.b   ' ',$F3,'b',$F3,'y ',$00
mlib_author::
    .dc.b   'みゆ (miyu rose)',$00

mlib_crlf2:
    .dc.b   $0a,$0d
mlib_crlf:
    .dc.b   $0a,$0d
mlib_terminate
    .dc.b   $00


filename1S:
    .dc.b   'test0001.txt',$00
filename1L:
    .dc.b   'TEST0001.TXT',$00
filename2S:
    .dc.b   'test0002.txt',$00
filename2L:
    .dc.b   'TEST0002.TXT',$00

file_abc:
    .dc.b   'abcdefghijklmnopqrstuvwxyz',$00
file_012:
    .dc.b   '0123456789',$00
file_ABC:
    .dc.b   'ABCDE',$00

mes_dots:
    .dc.b   ' … ',$00
mes_success:
    .dc.b   'ＯＫ',$00
mes_failure:
    .dc.b   '失敗した失敗した失敗した',$00

mes_01:
    .dc.b '01: 新規ファイルを_CREATE → エラーにならない',$00
mes_02:
    .dc.b "02: 'a'～'z'の26バイトを_WRITE → 26が返る",$00
mes_03:
    .dc.b '03: _CLOSE → エラーにならない',$00
mes_04:
    .dc.b '04: そのファイルを読み込み/書き込みモードで_OPEN → エラーにならない',$00
mes_05:
    .dc.b '05: ファイルの末尾に_SEEK → 26が返る',$00
mes_06:
    .dc.b "06: '0'～'9'の10バイトを_WRITE → 10が返る",$00
mes_07:
    .dc.b '07: _CLOSE → エラーにならない',$00
mes_08a:
    .dc.b '08a: 小文字ファイル名を大文字ファイル名で読み込み/書き込みモードで_OPEN → エラーにならない',$00
mes_08b:
    .dc.b '08b: 大文字ファイル名を小文字ファイル名で読み込み/書き込みモードで_OPEN → エラーにならない',$00
mes_09:
    .dc.b '09: 100バイト_READ → 36が返る',$00
mes_10:
    .dc.b '10: 読み込んだバッファの36バイトがabcdefghijklmnopqrstuvwxyz0123456789である',$00
mes_11:
    .dc.b '11: ファイルの先頭に_SEEK → 0が返る',$00
mes_12:
    .dc.b '12: 先頭から20バイトの位置に_SEEK → 20が返る',$00
mes_13:
    .dc.b "13: 'A'～'E'の5バイトを_WRITE → 5が返る",$00
mes_14:
    .dc.b '14: _CLOSE → エラーにならない',$00
mes_15:
    .dc.b '15: そのファイルを読み込み/書き込みモードで_OPEN → エラーにならない',$00
mes_16:
    .dc.b '16: 100バイト_READ → 36が返る',$00
mes_17:
    .dc.b '17: 読み込んだバッファの36バイトがabcdefghijklmnopqrstABCDEz0123456789である',$00
mes_18:
    .dc.b '18: 末尾から-6バイトの位置に_SEEK →30が返る',$00
mes_19:
    .dc.b '19: 100バイト_READ → 6が返る',$00
mes_20:
    .dc.b '20: 読み込んだバッファの6バイトが456789である',$00
mes_21:
    .dc.b '21: 先頭から12バイトの位置に_SEEK → 12が返る',$00
mes_22:
    .dc.b '22: 現在の位置から-5バイトの位置に_SEEK → 7が返る',$00
mes_23:
    .dc.b '23: 100バイト_READ → 29が返る',$00
mes_24:
    .dc.b '24: 読み込んだバッファの29バイトがhijklmnopqrstABCDEz0123456789である',$00
mes_25:
    .dc.b '25: 先頭から27バイトの位置に_SEEK → 27が返る',$00
mes_26:
    .dc.b '26: 現在の位置から-4バイトの位置に_SEEK → 23が返る',$00
mes_27:
    .dc.b '27: 0バイト_WRITE → 0が返る',$00
mes_28:
    .dc.b '28: _CLOSE → エラーにならない',$00
mes_29:
    .dc.b '29: そのファイルを読み込み/書き込みモードで_OPEN → エラーにならない',$00
mes_30:
    .dc.b '30: ファイルの末尾に_SEEK → 23が返る',$00
mes_31:
    .dc.b '31: ファイルの先頭に_SEEK → 0が返る',$00
mes_32:
    .dc.b '32: 100バイト_READ → 23が返る',$00
mes_33:
    .dc.b '33: 読み込んだバッファの23バイトがabcdefghijklmnopqrstABCである',$00
mes_34:
    .dc.b '34: _CLOSE → エラーにならない',$00

;=========================================================================================

    .bss
    .even

;-----------------------------------------------------------------------------------------

filebuf1:
    .ds.b   100

filebuf2:
    .ds.b   100

filebuf3:
    .ds.b   100

filebuf4:
    .ds.b   100

filebuf5:
    .ds.b   100

;-----------------------------------------------------------------------------------------

    .stack
    .even

;-----------------------------------------------------------------------------------------

mystack:
    .ds.l   1024
mysp:
    .end    main

;=========================================================================================
